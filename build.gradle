plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

group = 'com.larztalk'
version = '0.0.1'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
    maven {
        url myMavenRepoReadUrl
        credentials {
            username myMavenRepoReadUsername
            password myMavenRepoReadPassword
        }
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation('org.postgresql:postgresql')

    compile group: 'com.larztalk', name: 'androidsdk', version: '1.0.29'

    compile group: 'com.amazonaws', name: 'aws-java-sdk-secretsmanager', version: '1.11.716'
    compile 'com.amazonaws:aws-lambda-java-events:3.1.0'
    compile 'com.amazonaws:aws-lambda-java-core:1.2.1'
    compile 'com.amazonaws:aws-java-sdk-sqs:1.11.815'

    compile group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.842'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-ses', version: '1.11.837'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.11.837'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-sns', version: '1.11.837'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-rds', version: '1.11.840'

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'
    compile group: 'org.jcodec', name: 'jcodec-javase', version: '0.2.5'

    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    compile group: 'com.vladmihalcea', name: 'hibernate-types-52', version: '2.9.13'
    compile group: 'com.google.api-client', name: 'google-api-client', version: '1.28.0'

    compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

task start(type: JavaExec, dependsOn: classes) {
    main 'com.larztalk.backend.BackendApplication'
    classpath sourceSets.main.runtimeClasspath
    systemProperties = ['env': System.properties['env'], 'awsAccessKey': System.properties['aws.accesskey'], 'awsSecretKey': System.properties['aws.secretkey']]
}
